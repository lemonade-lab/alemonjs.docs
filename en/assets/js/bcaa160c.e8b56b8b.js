"use strict";(self.webpackChunkalemonjs_docs=self.webpackChunkalemonjs_docs||[]).push([[726],{8551:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=s(4848),t=s(8453);const r={sidebar_position:1},i="Response",c={id:"alemonjsDocs/basic/api",title:"Response",description:"How to define the processing message body",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/alemonjsDocs/basic/1-api.md",sourceDirName:"alemonjsDocs/basic",slug:"/alemonjsDocs/basic/api",permalink:"/en/docs/alemonjsDocs/basic/api",draft:!1,unlisted:!1,editUrl:"https://github.com/lemonade-lab/alemonjs-docs/docs/alemonjsDocs/basic/1-api.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u57fa\u7840",permalink:"/en/docs/category/\u57fa\u7840"},next:{title:"Type",permalink:"/en/docs/alemonjsDocs/basic/message-type"}},a={},d=[{value:"<code>OnResponse</code>",id:"onresponse",level:3}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"response",children:"Response"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"How to define the processing message body"})}),"\n",(0,o.jsx)(n.h3,{id:"onresponse",children:(0,o.jsx)(n.code,{children:"OnResponse"})}),"\n",(0,o.jsx)(n.p,{children:"A function used to handle specific events, which allows developers to define the operations that should be performed when the event occurs."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="apps/**/*/res.ts"',children:'// OnResponse(("\u6d88\u606f\u4f53","\u63a7\u5236\u4f53")=>{},"\u6d88\u606f\u7c7b\u578b","\u5339\u914d\u6b63\u5219")\r\nexport default OnResponse(\r\n  (event, { next }) => {\r\n    // Event message\r\n    console.log(\'event\', event)\r\n    // Go to the next matching rule\r\n    next()\r\n  },\r\n  \'message.create\', // Listening event type\r\n  /^\u4f60\u597d$/ // Matching regular expression\r\n)\n'})}),"\n",(0,o.jsx)(n.p,{children:"In the Apps directory, the newly -established folder and Res.TS file, the framework will be automatically searching for"})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var o=s(6540);const t={},r=o.createContext(t);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);