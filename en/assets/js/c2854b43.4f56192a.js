"use strict";(self.webpackChunkalemonjs_docs=self.webpackChunkalemonjs_docs||[]).push([[548],{1011:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var o=s(4848),t=s(8453);const a={sidebar_position:2},i="Aliases",r={id:"alemonjsDocs/advance/path",title:"Aliases",description:"Simplify and standardize import formats",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/alemonjsDocs/advance/2-path.md",sourceDirName:"alemonjsDocs/advance",slug:"/alemonjsDocs/advance/path",permalink:"/en/docs/alemonjsDocs/advance/path",draft:!1,unlisted:!1,editUrl:"https://github.com/lemonade-lab/alemonjs-docs/docs/alemonjsDocs/advance/2-path.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Loading",permalink:"/en/docs/alemonjsDocs/advance/loader"},next:{title:"Image",permalink:"/en/docs/alemonjsDocs/advance/images"}},l={},c=[{value:"Tip",id:"tip",level:2},{value:"Usage",id:"usage",level:2},{value:"Compile",id:"compile",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"aliases",children:"Aliases"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Simplify and standardize import formats"})}),"\n",(0,o.jsx)(n.h2,{id:"tip",children:"Tip"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:'title="ts.config.json"',children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "paths": {\n      "@src/*": ["src/*"]\n    }\n  },\n  "include": ["src/**/*"],\n  "extends": "alemonjs/tsconfig.json"\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { readFileSync } from 'fs'\n// Get the absolute path of the file, type string\nimport img_logo from '@src/asstes/img/logo.png'\nconst data = readFileSync(img_logo, 'utf-8')\n"})}),"\n",(0,o.jsx)(n.h2,{id:"compile",children:"Compile"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="alemon.config.ts"',children:"import { defineConfig } from 'alemonjs'\nimport { alias } from 'alemonjs/plugins'\nimport { fileURLToPath } from 'url'\nimport { dirname, join } from 'path'\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = dirname(__filename)\nexport default defineConfig({\n  build: {\n    plugins: [\n      alias({\n        entries: [{ find: '@src', replacement: join(__dirname, 'src') }]\n      })\n    ]\n  }\n})\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var o=s(6540);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);